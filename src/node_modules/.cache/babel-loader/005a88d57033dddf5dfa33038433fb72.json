{"ast":null,"code":"var _jsxFileName = \"/home/izzy/git/MusMeWebsite-Frontend/src/src/Waveform.js\";\nimport React, { Component } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Waveform extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: false\n    };\n\n    this.handlePlay = () => {\n      this.setState({\n        playing: !this.state.playing\n      });\n      this.waveform.playPause();\n    };\n  }\n\n  componentDidMount() {\n    const track = document.querySelector('#track');\n    this.waveform = WaveSurfer.create({\n      barWidth: 3,\n      cursorWidth: 1,\n      container: '#waveform',\n      backend: 'WebAudio',\n      height: 80,\n      progressColor: '#2D5BFF',\n      responsive: true,\n      waveColor: '#EFEFEF',\n      cursorColor: 'transparent'\n    });\n    const url = this.props.file;\n    this.waveform.load( /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"track\",\n      src: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }, this));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.handlePlay,\n        children: !this.state.playing ? 'Play' : 'Pause'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"waveform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default Waveform;","map":{"version":3,"sources":["/home/izzy/git/MusMeWebsite-Frontend/src/src/Waveform.js"],"names":["React","Component","WaveSurfer","Waveform","state","playing","handlePlay","setState","waveform","playPause","componentDidMount","track","document","querySelector","create","barWidth","cursorWidth","container","backend","height","progressColor","responsive","waveColor","cursorColor","url","props","file","load","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;;AAAA,SAwB/BC,UAxB+B,GAwBlB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,OAAd;AACA,WAAKG,QAAL,CAAcC,SAAd;AAED,KA5B8B;AAAA;;AAM/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AAEA,SAAKL,QAAL,GAAgBN,UAAU,CAACY,MAAX,CAAkB;AAChCC,MAAAA,QAAQ,EAAE,CADsB;AAEhCC,MAAAA,WAAW,EAAE,CAFmB;AAGhCC,MAAAA,SAAS,EAAE,WAHqB;AAIhCC,MAAAA,OAAO,EAAE,UAJuB;AAKhCC,MAAAA,MAAM,EAAE,EALwB;AAMhCC,MAAAA,aAAa,EAAE,SANiB;AAOhCC,MAAAA,UAAU,EAAE,IAPoB;AAQhCC,MAAAA,SAAS,EAAE,SARqB;AAShCC,MAAAA,WAAW,EAAE;AATmB,KAAlB,CAAhB;AAWA,UAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWC,IAAvB;AACA,SAAKlB,QAAL,CAAcmB,IAAd,eAAmB;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,GAAG,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAnB;AACD;;AAQDI,EAAAA,MAAM,GAAG;AAGP,wBACE;AAAA,8BACE;AAAK,QAAA,OAAO,EAAE,KAAKtB,UAAnB;AAAA,kBACG,CAAC,KAAKF,KAAL,CAAWC,OAAZ,GAAsB,MAAtB,GAA+B;AADlC;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA1C8B;;AA2ChC;AAED,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\n\n\nclass Waveform extends Component {  \n  state = {\n    playing: false,\n  };\n \n\n  componentDidMount() {\n    const track = document.querySelector('#track');\n\n    this.waveform = WaveSurfer.create({\n      barWidth: 3,\n      cursorWidth: 1,\n      container: '#waveform',\n      backend: 'WebAudio',\n      height: 80,\n      progressColor: '#2D5BFF',\n      responsive: true,\n      waveColor: '#EFEFEF',\n      cursorColor: 'transparent',\n    });\n    const url = this.props.file;\n    this.waveform.load(<audio id=\"track\" src={url} />);\n  };\n  \n  handlePlay = () => {\n    this.setState({ playing: !this.state.playing });\n    this.waveform.playPause();\n    \n  };\n  \n  render() {\n    \n\n    return (\n      <div>\n        <div onClick={this.handlePlay} >\n          {!this.state.playing ? 'Play' : 'Pause'}\n        </div>\n        <div id=\"waveform\" />\n          \n      </div>\n    );\n  }\n};\n\nexport default Waveform;"]},"metadata":{},"sourceType":"module"}